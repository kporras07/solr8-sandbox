name: Search API Pantheon
on:
  push:
  pull_request:
  repository_dispatch:
  schedule:
    - cron: '0 0 * * *'
jobs:
  # Checkout in separate job because docker image is alpine based and checkout action doesn't work.
  build_test:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pantheon-public/build-tools-ci:7.4.x
      options: --user root
    name: Build and test
    env:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      TERM: dumb
      TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
      GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
      TERMINUS_SITE: ${{ secrets.TERMINUS_SITE }}
      COMMIT_SHA: ${{ github.sha }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      BASH_ENV: ~/.bashrc
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login
        run: |
          git config --global user.email "$GIT_EMAIL"
          git config --global user.name "Github Actions"
          mkdir -p /root/.ssh && echo "StrictHostKeyChecking no" >> "/root/.ssh/config"
          terminus auth:login -n --machine-token="$TERMINUS_TOKEN"

      - name: Composer install
        run: composer install --ignore-platform-req=php

      - name: render-md-mermaid
        uses: nielsvaneck/render-md-mermaid@v2

      - name: Code sniff
        run: composer run-script code:lint



#      - name: Tests
#        run: |
#          export TERMINUS_ENV=$GITHUB_RUN_NUMBER
#          export SITE_ENV=$TERMINUS_SITE.$TERMINUS_ENV
#          echo "$SSH_PRIVATE_KEY" > ../private.key
#          chmod 600 ../private.key
#          eval `ssh-agent -s`
#          ssh-add ../private.key
#          if [ -n "$( echo $GITHUB_REF | sed -n '/heads/p')" ] ; then
#            BRANCH=`echo $GITHUB_REF | cut -c12-`
#            export GIT_REF="dev-${BRANCH}#${COMMIT_SHA}"
#          else
#            TAG=`echo $GITHUB_REF | cut -c11-`
#            export GIT_REF=${TAG}
#          fi
#          cd .ci
#          ./create-fresh-d8-site.sh
#          ./setup-d8-repo.sh
#          ./enable-modules.sh
#          ./verify-solr.sh
